{"ast":null,"code":"import { combineReducers } from 'redux'; //songlist\n\nvar songsReducer = function songsReducer() {\n  return [{\n    title: 'Changes',\n    duration: '4:30'\n  }, {\n    title: 'Juicy',\n    duration: '3:00'\n  }, {\n    title: 'Crossroads',\n    duration: '3:30'\n  }, {\n    title: 'Missing You',\n    duration: '4:00'\n  }];\n}; // selected song\n\n\nvar selectedSongReducer = function selectedSongReducer() {\n  var selectedSong = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'SONG_SELECTED') {\n    return action.payload;\n  }\n\n  return selectedSong;\n};\n\nexport default combineReducers({\n  songs: songsReducer,\n  selectSong: selectedSongReducer\n});","map":{"version":3,"sources":["/Users/antkeo/Code/project/songs/src/reducers/index.js"],"names":["combineReducers","songsReducer","title","duration","selectedSongReducer","selectedSong","action","type","payload","songs","selectSong"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,SAAO,CACL;AAAEC,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,QAAQ,EAAE;AAA9B,GADK,EAEL;AAAED,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAFK,EAGL;AAAED,IAAAA,KAAK,EAAC,YAAR;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAHK,EAIL;AAAED,IAAAA,KAAK,EAAE,aAAT;AAAwBC,IAAAA,QAAQ,EAAC;AAAjC,GAJK,CAAP;AAMD,CAPD,C,CASA;;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAiC;AAAA,MAAhCC,YAAgC,uEAAjB,IAAiB;AAAA,MAAXC,MAAW;;AAC3D,MAAGA,MAAM,CAACC,IAAP,KAAgB,eAAnB,EAAoC;AAClC,WAAOD,MAAM,CAACE,OAAd;AACD;;AACD,SAAOH,YAAP;AACD,CALD;;AAOA,eAAeL,eAAe,CAAC;AAC7BS,EAAAA,KAAK,EAAER,YADsB;AAE7BS,EAAAA,UAAU,EAAEN;AAFiB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux'\n\n//songlist\nconst songsReducer = () => {\n  return [\n    { title: 'Changes', duration: '4:30'},\n    { title: 'Juicy', duration: '3:00'},\n    { title:'Crossroads', duration: '3:30' },\n    { title: 'Missing You', duration:'4:00'}\n  ]\n}\n\n// selected song\nconst selectedSongReducer = (selectedSong = null, action) => {\n  if(action.type === 'SONG_SELECTED') {\n    return action.payload\n  }\n  return selectedSong\n}\n\nexport default combineReducers({\n  songs: songsReducer,\n  selectSong: selectedSongReducer\n})\n"]},"metadata":{},"sourceType":"module"}